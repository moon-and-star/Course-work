I0508 00:44:19.168860 30491 caffe.cpp:217] Using GPUs 1
I0508 00:44:19.281287 30491 caffe.cpp:222] GPU 1: GeForce GTX 1070
I0508 00:44:20.258359 30491 solver.cpp:60] Initializing solver from parameters: 
train_net: "./Prototxt/experiment_15/RTSD/orig/trial_1/train.prototxt"
test_net: "./Prototxt/experiment_15/RTSD/orig/trial_1/test.prototxt"
test_iter: 34
test_interval: 169
base_lr: 0.0001
display: 1
max_iter: 16900
lr_policy: "step"
gamma: 0.7
momentum: 0.9
weight_decay: 0.0005
stepsize: 3380
snapshot: 1690
snapshot_prefix: "./snapshots/experiment_15/RTSD/orig/trial_1/snap"
solver_mode: GPU
device_id: 1
train_state {
  level: 0
  stage: ""
}
iter_size: 1
type: "Adam"
I0508 00:44:20.258515 30491 solver.cpp:93] Creating training net from train_net file: ./Prototxt/experiment_15/RTSD/orig/trial_1/train.prototxt
I0508 00:44:20.259063 30491 net.cpp:58] Initializing net from parameters: 
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.0039215689
    mirror: false
    crop_size: 48
    mean_value: 119
    mean_value: 113
    mean_value: 113
  }
  data_param {
    source: "../local_data/lmdb/RTSD/orig/train/lmdb"
    batch_size: 512
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 100
    pad: 0
    kernel_size: 7
    group: 2
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv1_prescale"
  type: "Scale"
  bottom: "conv1"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  scale_param {
    filler {
      value: 0.6666
    }
    bias_term: false
  }
}
layer {
  name: "conv1_sTanH"
  type: "TanH"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "conv1_postscale"
  type: "Scale"
  bottom: "conv1"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  scale_param {
    filler {
      value: 1.7159
    }
    bias_term: false
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 150
    pad: 0
    kernel_size: 4
    group: 2
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv2_prescale"
  type: "Scale"
  bottom: "conv2"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  scale_param {
    filler {
      value: 0.6666
    }
    bias_term: false
  }
}
layer {
  name: "conv2_sTanH"
  type: "TanH"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "conv2_postscale"
  type: "Scale"
  bottom: "conv2"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  scale_param {
    filler {
      value: 1.7159
    }
    bias_term: false
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 250
    pad: 0
    kernel_size: 4
    group: 2
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv3_prescale"
  type: "Scale"
  bottom: "conv3"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  scale_param {
    filler {
      value: 0.6666
    }
    bias_term: false
  }
}
layer {
  name: "conv3_sTanH"
  type: "TanH"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv3_postscale"
  type: "Scale"
  bottom: "conv3"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  scale_param {
    filler {
      value: 1.7159
    }
    bias_term: false
  }
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "fc4_300"
  type: "InnerProduct"
  bottom: "pool3"
  top: "fc4_300"
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "fc4_prescale"
  type: "Scale"
  bottom: "fc4_300"
  top: "fc4_300"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  scale_param {
    filler {
      value: 0.6666
    }
    bias_term: false
  }
}
layer {
  name: "fc4_sTanH"
  type: "TanH"
  bottom: "fc4_300"
  top: "fc4_300"
}
layer {
  name: "fc4_postscale"
  type: "Scale"
  bottom: "fc4_300"
  top: "fc4_300"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  scale_param {
    filler {
      value: 1.7159
    }
    bias_term: false
  }
}
layer {
  name: "fc5_116"
  type: "InnerProduct"
  bottom: "fc4_300"
  top: "fc5_classes"
  inner_product_param {
    num_output: 116
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "softmax"
  type: "Softmax"
  bottom: "fc5_classes"
  top: "softmax"
}
layer {
  name: "loss"
  type: "MultinomialLogisticLoss"
  bottom: "softmax"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy_1"
  type: "Accuracy"
  bottom: "fc5_classes"
  bottom: "label"
  top: "accuracy_1"
  accuracy_param {
    top_k: 1
  }
}
layer {
  name: "accuracy_5"
  type: "Accuracy"
  bottom: "fc5_classes"
  bottom: "label"
  top: "accuracy_5"
  accuracy_param {
    top_k: 5
  }
}
layer {
  name: "silence"
  type: "Silence"
  bottom: "accuracy_1"
  bottom: "accuracy_5"
}
I0508 00:44:20.259241 30491 layer_factory.hpp:77] Creating layer data
I0508 00:44:20.260144 30491 net.cpp:100] Creating Layer data
I0508 00:44:20.260165 30491 net.cpp:408] data -> data
I0508 00:44:20.260190 30491 net.cpp:408] data -> label
I0508 00:44:20.261267 30585 db_lmdb.cpp:35] Opened lmdb ../local_data/lmdb/RTSD/orig/train/lmdb
I0508 00:44:20.281760 30491 data_layer.cpp:41] output data size: 512,3,48,48
I0508 00:44:20.311468 30491 net.cpp:150] Setting up data
I0508 00:44:20.311498 30491 net.cpp:157] Top shape: 512 3 48 48 (3538944)
I0508 00:44:20.311503 30491 net.cpp:157] Top shape: 512 (512)
I0508 00:44:20.311506 30491 net.cpp:165] Memory required for data: 14157824
I0508 00:44:20.311518 30491 layer_factory.hpp:77] Creating layer label_data_1_split
I0508 00:44:20.311532 30491 net.cpp:100] Creating Layer label_data_1_split
I0508 00:44:20.311537 30491 net.cpp:434] label_data_1_split <- label
I0508 00:44:20.311553 30491 net.cpp:408] label_data_1_split -> label_data_1_split_0
I0508 00:44:20.311563 30491 net.cpp:408] label_data_1_split -> label_data_1_split_1
I0508 00:44:20.311574 30491 net.cpp:408] label_data_1_split -> label_data_1_split_2
I0508 00:44:20.311661 30491 net.cpp:150] Setting up label_data_1_split
I0508 00:44:20.311671 30491 net.cpp:157] Top shape: 512 (512)
I0508 00:44:20.311674 30491 net.cpp:157] Top shape: 512 (512)
I0508 00:44:20.311678 30491 net.cpp:157] Top shape: 512 (512)
I0508 00:44:20.311681 30491 net.cpp:165] Memory required for data: 14163968
I0508 00:44:20.311684 30491 layer_factory.hpp:77] Creating layer conv1
I0508 00:44:20.311702 30491 net.cpp:100] Creating Layer conv1
I0508 00:44:20.311707 30491 net.cpp:434] conv1 <- data
I0508 00:44:20.311714 30491 net.cpp:408] conv1 -> conv1
F0508 00:44:20.311831 30491 base_conv_layer.cpp:122] Check failed: channels_ % group_ == 0 (1 vs. 0) 
*** Check failure stack trace: ***
    @     0x7f529d15a5cd  google::LogMessage::Fail()
    @     0x7f529d15c433  google::LogMessage::SendToLog()
    @     0x7f529d15a15b  google::LogMessage::Flush()
    @     0x7f529d15ce1e  google::LogMessageFatal::~LogMessageFatal()
    @     0x7f529d901b8e  caffe::BaseConvolutionLayer<>::LayerSetUp()
    @     0x7f529d8bf187  caffe::CuDNNConvolutionLayer<>::LayerSetUp()
    @     0x7f529d9378a2  caffe::Net<>::Init()
    @     0x7f529d939131  caffe::Net<>::Net()
    @     0x7f529d94185a  caffe::Solver<>::InitTrainNet()
    @     0x7f529d942b57  caffe::Solver<>::Init()
    @     0x7f529d942efa  caffe::Solver<>::Solver()
    @     0x7f529d788a43  caffe::Creator_AdamSolver<>()
    @           0x40afb9  train()
    @           0x4077c8  main
    @     0x7f529b8f1830  __libc_start_main
    @           0x408099  _start
    @              (nil)  (unknown)
