I0411 01:10:19.864645 26017 caffe.cpp:217] Using GPUs 1
I0411 01:10:20.179471 26017 caffe.cpp:222] GPU 1: GeForce GTX 1070
I0411 01:10:21.057770 26017 solver.cpp:60] Initializing solver from parameters: 
train_net: "./Prototxt/experiment_8/rtsd-r1/CoNorm/trial_1/train.prototxt"
test_net: "./Prototxt/experiment_8/rtsd-r1/CoNorm/trial_1/test.prototxt"
test_iter: 8
test_interval: 25
base_lr: 0.0001
display: 1
max_iter: 2500
lr_policy: "step"
gamma: 0.5
momentum: 0.9
weight_decay: 0.0005
stepsize: 750
snapshot: 250
snapshot_prefix: "./snapshots/experiment_8/rtsd-r1/CoNorm/trial_1/snap"
solver_mode: GPU
device_id: 1
train_state {
  level: 0
  stage: ""
}
iter_size: 1
type: "Adam"
I0411 01:10:21.057910 26017 solver.cpp:93] Creating training net from train_net file: ./Prototxt/experiment_8/rtsd-r1/CoNorm/trial_1/train.prototxt
I0411 01:10:21.058231 26017 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy_1
I0411 01:10:21.058243 26017 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy_5
I0411 01:10:21.058394 26017 net.cpp:58] Initializing net from parameters: 
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: false
    crop_size: 48
    mean_value: 132
    mean_value: 132
    mean_value: 131
  }
  data_param {
    source: "../local_data/lmdb/rtsd-r1/CoNorm/train/lmdb"
    batch_size: 1024
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 100
    pad: 0
    kernel_size: 7
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv1_prescale"
  type: "Scale"
  bottom: "conv1"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  scale_param {
    filler {
      value: 0.6666
    }
    bias_term: false
  }
}
layer {
  name: "conv1_sTanH"
  type: "TanH"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "conv1_postscale"
  type: "Scale"
  bottom: "conv1"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  scale_param {
    filler {
      value: 1.7159
    }
    bias_term: false
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 150
    pad: 0
    kernel_size: 4
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv2_prescale"
  type: "Scale"
  bottom: "conv2"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  scale_param {
    filler {
      value: 0.6666
    }
    bias_term: false
  }
}
layer {
  name: "conv2_sTanH"
  type: "TanH"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "conv2_postscale"
  type: "Scale"
  bottom: "conv2"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  scale_param {
    filler {
      value: 1.7159
    }
    bias_term: false
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 250
    pad: 0
    kernel_size: 4
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv3_prescale"
  type: "Scale"
  bottom: "conv3"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  scale_param {
    filler {
      value: 0.6666
    }
    bias_term: false
  }
}
layer {
  name: "conv3_sTanH"
  type: "TanH"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv3_postscale"
  type: "Scale"
  bottom: "conv3"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  scale_param {
    filler {
      value: 1.7159
    }
    bias_term: false
  }
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "fc4_300"
  type: "InnerProduct"
  bottom: "pool3"
  top: "fc4_300"
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "fc4_prescale"
  type: "Scale"
  bottom: "fc4_300"
  top: "fc4_300"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  scale_param {
    filler {
      value: 0.6666
    }
    bias_term: false
  }
}
layer {
  name: "fc4_sTanH"
  type: "TanH"
  bottom: "fc4_300"
  top: "fc4_300"
}
layer {
  name: "fc4_postscale"
  type: "Scale"
  bottom: "fc4_300"
  top: "fc4_300"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  scale_param {
    filler {
      value: 1.7159
    }
    bias_term: false
  }
}
layer {
  name: "fc5_67"
  type: "InnerProduct"
  bottom: "fc4_300"
  top: "fc5_classes"
  inner_product_param {
    num_output: 67
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc5_classes"
  bottom: "label"
  top: "loss"
}
I0411 01:10:21.058501 26017 layer_factory.hpp:77] Creating layer data
I0411 01:10:21.059581 26017 net.cpp:100] Creating Layer data
I0411 01:10:21.059598 26017 net.cpp:408] data -> data
I0411 01:10:21.059623 26017 net.cpp:408] data -> label
I0411 01:10:21.061616 26107 db_lmdb.cpp:35] Opened lmdb ../local_data/lmdb/rtsd-r1/CoNorm/train/lmdb
I0411 01:10:21.079422 26017 data_layer.cpp:41] output data size: 1024,3,48,48
I0411 01:10:21.129782 26017 net.cpp:150] Setting up data
I0411 01:10:21.129814 26017 net.cpp:157] Top shape: 1024 3 48 48 (7077888)
I0411 01:10:21.129820 26017 net.cpp:157] Top shape: 1024 (1024)
I0411 01:10:21.129825 26017 net.cpp:165] Memory required for data: 28315648
I0411 01:10:21.129834 26017 layer_factory.hpp:77] Creating layer conv1
I0411 01:10:21.129856 26017 net.cpp:100] Creating Layer conv1
I0411 01:10:21.129864 26017 net.cpp:434] conv1 <- data
I0411 01:10:21.129878 26017 net.cpp:408] conv1 -> conv1
I0411 01:10:21.485958 26017 net.cpp:150] Setting up conv1
I0411 01:10:21.485991 26017 net.cpp:157] Top shape: 1024 100 42 42 (180633600)
I0411 01:10:21.485996 26017 net.cpp:165] Memory required for data: 750850048
I0411 01:10:21.486022 26017 layer_factory.hpp:77] Creating layer conv1_prescale
I0411 01:10:21.486039 26017 net.cpp:100] Creating Layer conv1_prescale
I0411 01:10:21.486050 26017 net.cpp:434] conv1_prescale <- conv1
I0411 01:10:21.486058 26017 net.cpp:395] conv1_prescale -> conv1 (in-place)
I0411 01:10:21.486192 26017 net.cpp:150] Setting up conv1_prescale
I0411 01:10:21.486203 26017 net.cpp:157] Top shape: 1024 100 42 42 (180633600)
I0411 01:10:21.486209 26017 net.cpp:165] Memory required for data: 1473384448
F0411 01:10:21.486220 26017 net.cpp:169] Check failed: param_size <= num_param_blobs (2 vs. 1) Too many params specified for layer conv1_prescale
*** Check failure stack trace: ***
    @     0x7fef8d2a05cd  google::LogMessage::Fail()
    @     0x7fef8d2a2433  google::LogMessage::SendToLog()
    @     0x7fef8d2a015b  google::LogMessage::Flush()
    @     0x7fef8d2a2e1e  google::LogMessageFatal::~LogMessageFatal()
    @     0x7fef8da7dbef  caffe::Net<>::Init()
    @     0x7fef8da7f131  caffe::Net<>::Net()
    @     0x7fef8da8785a  caffe::Solver<>::InitTrainNet()
    @     0x7fef8da88b57  caffe::Solver<>::Init()
    @     0x7fef8da88efa  caffe::Solver<>::Solver()
    @     0x7fef8d8cea43  caffe::Creator_AdamSolver<>()
    @           0x40afb9  train()
    @           0x4077c8  main
    @     0x7fef8ba37830  __libc_start_main
    @           0x408099  _start
    @              (nil)  (unknown)
